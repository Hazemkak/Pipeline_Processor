
Library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity memory is 
PORT
( address: IN std_logic_vector(19 DOWNTO 0);
write_data16 : IN std_logic_vector(15 DOWNTO 0);
write_data32:IN std_logic_vector(31 DOWNTO 0);
memo_r,memo_w16,memo_w32,clk:IN std_logic;
memo_data:OUT std_logic_vector(31 DOWNTO 0)
);
END memory;

architecture archmemory of memory is

	TYPE ram_type IS ARRAY(0 TO 1048575) of std_logic_vector(31 DOWNTO 0);
	SIGNAL ram : ram_type ;

    begin           

	process(clk)
	begin

	if (falling_edge(clk)) then
		if (memo_r = '1') then
			memo_data<=ram(to_integer(unsigned(address)));
		elsif (memo_w16 = '1') then
			ram(to_integer(unsigned(address))) <= "000000000000000" & write_data16;
		elsif (memo_w32 = '1') then
			ram(to_integer(unsigned(address))) <= write_data32;
		end if;
	end if;

	if (rising_edge(clk)) then
		-- do nothing only pass the inputs to MEM-WB buffer
	end if;

	end process;

end archmemory ;
